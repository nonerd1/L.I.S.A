(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1998],{34461:(e,t,n)=>{Promise.resolve().then(n.bind(n,41118))},41118:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>u});var a=n(95155),r=n(73017),i=n(76604),s=n(12115),o=n(66695);let l=e=>{let{chart:t}=e,r=(0,s.useRef)(null);return(0,s.useEffect)(()=>{(async()=>{try{if(r.current){let{default:e}=await Promise.all([n.e(5661),n.e(5280)]).then(n.bind(n,85280));if(e.initialize({startOnLoad:!1,theme:"dark",securityLevel:"loose",themeVariables:{primaryColor:"#2563eb",primaryTextColor:"#ffffff",primaryBorderColor:"#2563eb",lineColor:"#ffffff",secondaryColor:"#252525",tertiaryColor:"#1e1e1e",tertiaryTextColor:"#ffffff"}}),r.current){let n="mermaid-"+Math.random().toString(36).substr(2,9),{svg:a}=await e.render(n,t);r.current.innerHTML=a}}}catch(e){console.error("Error rendering Mermaid diagram:",e),r.current&&(r.current.innerHTML='<div class="text-red-500">Error rendering diagram</div>')}})()},[t]),(0,a.jsx)("div",{className:"mermaid-wrapper overflow-auto",children:(0,a.jsx)("div",{ref:r,className:"mermaid",children:t})})};var c=n(58593),d=n(38391);let m={fontSize:"15px",lineHeight:"1.6",margin:0,padding:"1.5rem",background:"#1e1e1e",borderRadius:"0.75rem"};function x(e){let{code:t,language:n="c"}=e;return(0,a.jsx)("div",{className:"rounded-xl overflow-hidden",children:(0,a.jsx)(c.A,{language:n,style:d.A,customStyle:m,showLineNumbers:!0,wrapLines:!0,children:t.trim()})})}let h={roll:{P:.65,I:.035,D:.023},pitch:{P:.65,I:.035,D:.023},yaw:{P:.85,I:.045,D:0}},p=[{title:"Bluetooth Initialization",code:"\n// Initialize the CC256x Bluetooth module\nbool init_cc256x() {\n  // Configure HCI UART\n  uart_config_t uart_config = {\n    .baud_rate = 115200,\n    .data_bits = UART_DATA_8_BITS,\n    .parity = UART_PARITY_DISABLE,\n    .stop_bits = UART_STOP_BITS_1,\n    .flow_ctrl = UART_HW_FLOWCTRL_CTS_RTS\n  };\n  \n  uart_param_config(UART_NUM_1, &uart_config);\n  uart_set_pin(UART_NUM_1, TX_PIN, RX_PIN, RTS_PIN, CTS_PIN);\n  uart_driver_install(UART_NUM_1, BUF_SIZE * 2, BUF_SIZE * 2, 0, NULL, 0);\n  \n  // Send HCI reset command\n  uint8_t hci_reset_cmd[] = { 0x01, 0x03, 0x0C, 0x00 };\n  uart_write_bytes(UART_NUM_1, (const char*)hci_reset_cmd, sizeof(hci_reset_cmd));\n  \n  // Wait for command complete event\n  uint8_t buf[64];\n  int len = uart_read_bytes(UART_NUM_1, buf, sizeof(buf), 1000 / portTICK_PERIOD_MS);\n  \n  // Verify command complete event for HCI reset\n  if (len > 6 && buf[0] == 0x04 && buf[1] == 0x0E && buf[3] == 0x03 && buf[4] == 0x0C && buf[5] == 0x00) {\n    return true;\n  }\n  \n  return false;\n}"},{title:"Arm Extension Control",code:"\n// Control arm extension based on input percentage (0-100%)\nvoid extend_arms(uint8_t percentage) {\n  // Limit input range\n  if (percentage > 100) percentage = 100;\n  \n  // Calculate PWM duty cycle (1000-2000 \xb5s)\n  uint16_t pulse_width = 1000 + (percentage * 10);\n  \n  // Apply PWM to actuator channels\n  for (int i = 0; i < NUM_ARMS; i++) {\n    // Set direction pin based on extension\n    GPIO_WriteBit(ACTUATOR_DIR_PORT, ACTUATOR_DIR_PIN[i], percentage > last_percentage[i] ? Bit_SET : Bit_RESET);\n    \n    // Set PWM value for the actuator\n    TIM_SetCompare1(ACTUATOR_TIM[i], pulse_width);\n  }\n  \n  // Store for next comparison\n  last_percentage = percentage;\n}"},{title:"PID Control Settings",code:"\n// PID controller configuration for flight stabilization\nvoid configure_pid_controllers() {\n  // Roll PID\n  pid_roll.kp = ".concat(h.roll.P,"f;\n  pid_roll.ki = ").concat(h.roll.I,"f;\n  pid_roll.kd = ").concat(h.roll.D,"f;\n  pid_roll.imax = 50.0f;  // Integral windup guard\n  \n  // Pitch PID\n  pid_pitch.kp = ").concat(h.pitch.P,"f;\n  pid_pitch.ki = ").concat(h.pitch.I,"f;\n  pid_pitch.kd = ").concat(h.pitch.D,"f;\n  pid_pitch.imax = 50.0f;\n  \n  // Yaw PID\n  pid_yaw.kp = ").concat(h.yaw.P,"f;\n  pid_yaw.ki = ").concat(h.yaw.I,"f;\n  pid_yaw.kd = ").concat(h.yaw.D,"f;\n  pid_yaw.imax = 50.0f;\n  \n  // Different PID settings for extended arms mode\n  if (arms_extended) {\n    // When arms are extended, we need different tuning\n    pid_roll.kp *= 0.85f;  // Reduce gain as moment of inertia increases\n    pid_pitch.kp *= 0.85f;\n    \n    // Adjust derivative gain to compensate for slower response\n    pid_roll.kd *= 1.2f;\n    pid_pitch.kd *= 1.2f;\n  }\n}")}];function u(){let e=(0,s.useRef)(null),t=(0,s.useRef)(null),n=(0,i.W)(e,{once:!0,amount:.2}),c=(0,i.W)(t,{once:!0,amount:.1});return(0,a.jsxs)("div",{className:"pt-24 pb-20",children:[(0,a.jsx)("div",{className:"bg-[#1a1a1a] py-16",children:(0,a.jsxs)("div",{className:"container mx-auto px-4",children:[(0,a.jsx)("h1",{className:"text-4xl md:text-5xl font-bold mb-6",children:"Software Architecture"}),(0,a.jsx)("p",{className:"text-xl text-gray-300 max-w-3xl",children:"The software that powers L.I.S.A.'s unique telescopic arm system and flight controls."})]})}),(0,a.jsx)("section",{className:"py-16 bg-[#1e1e1e]",children:(0,a.jsx)("div",{className:"container mx-auto px-4",children:(0,a.jsxs)(r.P.div,{ref:e,initial:{opacity:0,y:30},animate:n?{opacity:1,y:0}:{opacity:0,y:30},transition:{duration:.6},className:"max-w-5xl mx-auto",children:[(0,a.jsx)("h2",{className:"text-3xl font-bold mb-10",children:"System Architecture"}),(0,a.jsx)(o.Zp,{className:"p-8 bg-[#252525] rounded-2xl shadow-lg mb-8",children:(0,a.jsx)(l,{chart:"\ngraph TD\n    A[Smartphone App] --\x3e|Bluetooth| B[CC256 BT Module]\n    B --\x3e|HCI UART| C[STM32 Microcontroller]\n    C --\x3e|PWM| D[H-Bridge Drivers]\n    D --\x3e|Current| E[Linear Actuators]\n    E --\x3e|Mechanical Motion| F[Telescopic Arms]\n    \n    G[Remote Control] --\x3e|RF| H[Pixhawk Receiver]\n    H --\x3e|PPM| I[Pixhawk Flight Controller]\n    I --\x3e|PWM| J[ESCs]\n    J --\x3e|Current| K[Motors]\n    \n    L[Sensors] --\x3e|I2C/SPI| I\n    \n    C -.->|Status| I\n"})}),(0,a.jsxs)("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-8 mt-12",children:[(0,a.jsxs)("div",{children:[(0,a.jsx)("h3",{className:"text-2xl font-semibold mb-4",children:"Control Path"}),(0,a.jsx)("p",{className:"text-gray-300",children:"The control system follows a multi-layered approach, with arm extension controlled via smartphone over Bluetooth, while flight dynamics are handled by the Pixhawk controller. This separation ensures reliable flight performance even during arm adjustment."})]}),(0,a.jsxs)("div",{children:[(0,a.jsx)("h3",{className:"text-2xl font-semibold mb-4",children:"Communication Protocols"}),(0,a.jsx)("p",{className:"text-gray-300",children:"We implemented standard communication protocols (UART, I2C, SPI) for component interfacing, with a custom messaging protocol over Bluetooth to enable precise arm control. The Pixhawk uses the MAVLink protocol for telemetry and status monitoring."})]})]})]})})}),(0,a.jsx)("section",{className:"py-16 bg-[#222222]",children:(0,a.jsx)("div",{className:"container mx-auto px-4",children:(0,a.jsxs)(r.P.div,{ref:t,initial:{opacity:0,y:30},animate:c?{opacity:1,y:0}:{opacity:0,y:30},transition:{duration:.6},className:"max-w-5xl mx-auto",children:[(0,a.jsx)("h2",{className:"text-3xl font-bold mb-10",children:"Key Implementation Details"}),(0,a.jsx)("div",{className:"space-y-12",children:p.map((e,t)=>(0,a.jsxs)(r.P.div,{initial:{opacity:0,y:20},animate:c?{opacity:1,y:0}:{opacity:0,y:20},transition:{duration:.5,delay:.1*t},children:[(0,a.jsx)("h3",{className:"text-2xl font-semibold mb-4",children:e.title}),(0,a.jsx)(o.Zp,{className:"bg-[#1e1e1e] rounded-xl overflow-hidden",children:(0,a.jsx)("div",{className:"p-6",children:(0,a.jsx)(x,{code:e.code,language:"c"})})})]},t))})]})})}),(0,a.jsx)("section",{className:"py-16 bg-[#1e1e1e]",children:(0,a.jsxs)("div",{className:"container mx-auto px-4 text-center",children:[(0,a.jsx)("h2",{className:"text-3xl font-bold mb-6",children:"PID Tuning Results"}),(0,a.jsx)("p",{className:"text-xl text-gray-300 mb-8 max-w-3xl mx-auto",children:"After migrating to the Pixhawk, extensive PID tuning was performed to achieve optimal flight performance with both retracted and extended arms."}),(0,a.jsx)("div",{className:"grid grid-cols-1 md:grid-cols-3 gap-8 max-w-4xl mx-auto",children:Object.entries(h).map(e=>{let[t,n]=e;return(0,a.jsxs)(o.Zp,{className:"p-6 bg-[#252525] rounded-2xl",children:[(0,a.jsxs)("h3",{className:"text-xl font-semibold mb-4 capitalize",children:[t," Axis"]}),(0,a.jsx)("div",{className:"space-y-2",children:Object.entries(n).map(e=>{let[t,n]=e;return(0,a.jsxs)("div",{className:"flex justify-between items-center",children:[(0,a.jsxs)("span",{className:"text-gray-300",children:["K",t,":"]}),(0,a.jsx)("span",{className:"font-mono text-[#2563eb] font-semibold",children:n})]},t)})})]},t)})}),(0,a.jsx)("div",{className:"mt-12",children:(0,a.jsx)("p",{className:"text-gray-300 italic mb-8",children:'"Finding the right PID values for the extended arm configuration required careful attention to the changed dynamics and moment of inertia."'})})]})}),(0,a.jsx)("section",{className:"py-16 bg-[#1a1a1a]",children:(0,a.jsxs)("div",{className:"container mx-auto px-4 text-center",children:[(0,a.jsx)("h2",{className:"text-3xl font-bold mb-6",children:"Explore the Design Process"}),(0,a.jsx)("p",{className:"text-xl text-gray-300 mb-8 max-w-2xl mx-auto",children:"See how we designed and iteratively improved the telescopic arm mechanism."}),(0,a.jsx)("a",{href:"/design",className:"btn-primary",children:"View Design Gallery"})]})})]})}},59434:(e,t,n)=>{"use strict";n.d(t,{cn:()=>i});var a=n(52596),r=n(39688);function i(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return(0,r.QP)((0,a.$)(t))}},66695:(e,t,n)=>{"use strict";n.d(t,{Zp:()=>i});var a=n(95155);n(12115);var r=n(59434);function i(e){let{className:t,...n}=e;return(0,a.jsx)("div",{"data-slot":"card",className:(0,r.cn)("bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm",t),...n})}}},e=>{var t=t=>e(e.s=t);e.O(0,[3017,548,727,8441,1684,7358],()=>t(34461)),_N_E=e.O()}]);